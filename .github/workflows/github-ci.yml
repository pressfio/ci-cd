name: github-ci

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: 'The dotnet version to use'
        default: '6.0.x'
        required: false
        type: string
      namespace:
        description: 'K8S namespace for deployment'
        default: 'plendy'
        required: false
        type: string

env:
  CONTAINER_REGISTRY: ghcr.io

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Set project name var
      run: echo ::set-output name=project_name::echo github.repository | sed 's/pressfio\///'

    - name: Set tag var
      run: echo ::set-output name=repo_tag::git describe --tags `git rev-list --tags --max-count=1`

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Configure nuget
      run: dotnet nuget add source https://nuget.pkg.github.com/pressfio/index.json --name "pressfio" --username "pressfio-bot" --password ${{ secrets.NUGET_TOKEN }} --store-password-in-clear-text
      shell: bash

    - name: Restore project
      run: dotnet restore
      shell: bash

    - name: Build project
      run: dotnet publish -c Release -o ${{ github.event.repository.name }}
      shell: bash

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ${{ github.event.repository.name }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-stage:
    needs: [build-and-push-docker]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    
    - name: Create kube config
      run: |
        mkdir -p $HOME/.kube/
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
      shell: bash

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.9.3

    - name: Add Plendy Helm repo
      run: helm repo add pressfio https://pressfio.github.io/helm
      shell: bash

    - name: Update Plendy Helm repo
      run: helm repo update pressfio
      shell: bash

    - name: Install chart
      run: |
          helm upgrade \
            --install \
            --atomic \
            --timeout 1m \
            --values .plendy/values.yaml \
            --namespace ${{ inputs.namespace }} \
            --create-namespace \
            ${{ steps.vars.outputs.project_name }} pressfio/plendy-backend
      shell: bash